---
- name: copy sectora binary executable
  copy:
    src: "{{ target_dir }}/sectora"
    dest: /usr/sbin/sectora
    mode: 0755

- name: copy sectora key script executable
  copy:
    src: ./sectora.sh
    dest: /usr/sbin/sectora.sh
    mode: 0700

- name: copy sectorad binary executable
  copy:
    src: "{{ target_dir }}/sectorad"
    dest: /usr/sbin/sectorad
    mode: 0755

- name: create sectorad config
  template:
    src: sectora.service
    dest: /etc/systemd/system/sectora.service
  notify:
    - start sectorad

- name: Enable service sectora
  systemd:
    name: sectora
    enabled: yes

- name: copy libnss_sectora shared object
  copy:
    src: "{{ target_dir }}/libnss_sectora.so"
    dest: /usr/lib/libnss_sectora.so

- name: create link for shared object
  file:
    src: /usr/lib/libnss_sectora.so
    dest: /usr/lib/libnss_sectora.so.2
    state: link

- name: create config
  template:
    src: sectora.conf
    dest: /etc/sectora.conf

- name: configure sudoers
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%{{ (item.group is defined and item.group) or item.name }} ALL='
    line: '%{{ (item.group is defined and item.group) or item.name }}  ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  when: (item.sudoers is defined) and (item.sudoers == true)
  with_items:
    '{{ gh_teams }}'

- name: configure sshd_config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    validate: '/usr/sbin/sshd -t -f %s'
  with_items:
    - regexp: '^AuthorizedKeysCommandUser\s'
      line: 'AuthorizedKeysCommandUser root'
    - regexp: '^AuthorizedKeysCommand\s'
      line: 'AuthorizedKeysCommand /usr/sbin/sectora.sh'
      # line: 'AuthorizedKeysCommand /usr/sbin/sectora key %u'
    - regexp: '^UsePAM\s'
      line: 'UsePAM yes'
  notify:
    - restart sshd

- name: configure nss switch
  lineinfile:
    path: /etc/nsswitch.conf
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    backrefs: yes
  with_items:
    - {regexp: '^passwd:\s+(.*)$', line: 'passwd: files sectora'}
    - {regexp: '^shadow:\s+(.*)$', line: 'shadow: files sectora'}
    - {regexp: '^group:\s+(.*)$',  line: 'group:  files sectora'}

- name: pam configuration
  lineinfile:
    path: /etc/pam.d/sshd
    line: '{{ item.line }}'
    state: '{{ item.state }}'
  with_items:
    - {line: 'auth sufficient pam_exec.so quiet expose_authtok /usr/sbin/sectora pam', state: 'present'}
    - {line: 'auth optional pam_unix.so not_set_pass use_first_pass nodelay', state: 'present'}
    - {line: 'session required pam_mkhomedir.so skel: /etc/skel/ umask: 0022', state: 'present'}
